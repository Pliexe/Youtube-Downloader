{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","searchInputRef","createRef","backdropRef","searchButton","useState","messageTitle","setMessageTitle","messageContent","setMessageContent","messageQueue","setMessageQueue","formatsRef","messageBoxRef","searchDivRef","loadingDivRef","infoDivRef","videoQualityDropdownRef","currentInfo","setCurrentInfo","formatSelected","setFormatedSelected","ShowMessage","title","message","queueMessage","backdrop","current","style","old","display","closeMessage","a","length","splice","search","sinput","sbutton","searchDiv","loadingDiv","infoDiv","value","disabled","fetch","data","status","json","download","dbutton","msgBox","videoDropdown","includes","newwindow","window","open","videoDetails","video_url","onbeforeunload","undefined","setFormat","e","target","className","ref","type","onClick","color","name","fadeIn","href","src","thumbnails","url","alt","id","htmlFor","defaultChecked","formats","filter","x","container","map","qualityLabel","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbd25cd5.chunk.js","sourcesContent":["import { createRef, useState } from 'react';\nimport './App.css';\nimport Spinner from 'react-spinkit';\n\ninterface IMessage {\n  title: string;\n  message: string;\n}\n\ninterface IVIdeoInfo {\n  formats: {\n    qualityLabel: string;\n    audioBitrate: number;\n    width: number;\n    height: number;\n    container: \"mp4\" | \"webm\";\n  }[]\n  videoDetails: {\n    title: string;\n    description: string;\n    video_url: string;\n    thumbnails: {\n      url: string;\n      height: number;\n      width: number;\n    }[]\n  }\n}\n\nfunction uniq(a: string[]) {\n  var seen = {};\n  return a.filter(function (item) {\n    // @ts-ignore\n    return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n  });\n}\n\nfunction sleep(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nfunction App() {\n  const searchInputRef = createRef<HTMLInputElement>();\n  const backdropRef = createRef<HTMLDivElement>();\n  const searchButton = createRef<HTMLButtonElement>();\n  const [messageTitle, setMessageTitle] = useState(\"\");\n  const [messageContent, setMessageContent] = useState(\"\");\n  const [messageQueue, setMessageQueue] = useState<IMessage[]>([]);\n  const formatsRef = createRef<HTMLDivElement>();\n  const messageBoxRef = createRef<HTMLDivElement>();\n  const searchDivRef = createRef<HTMLDivElement>();\n  const loadingDivRef = createRef<HTMLDivElement>();\n  const infoDivRef = createRef<HTMLDivElement>();\n  const downloadButtonRef = createRef<HTMLDivElement>();\n  const audioDropdownRef = createRef<HTMLSelectElement>();\n  const videoQualityDropdownRef = createRef<HTMLSelectElement>();\n  const [currentInfo, setCurrentInfo] = useState<IVIdeoInfo>();\n  const [formatSelected, setFormatedSelected] = useState<string>(\"mp3\");\n\n  const ShowMessage = (title: string, message: string) => {\n    setMessageTitle(title);\n    setMessageContent(message);\n  }\n\n  const queueMessage = (title: string, message: string) => {\n    let backdrop = backdropRef.current;\n\n    if (backdrop?.style == null) return;\n\n    setMessageQueue(old => [...old, { title, message }]);\n\n    if (backdrop.style.display == \"none\" || backdrop.style.display == \"\") {\n      backdrop.style.display = \"flex\";\n      ShowMessage(title, message);\n    }\n  }\n\n  const closeMessage = async () => {\n    let backdrop = backdropRef.current;\n\n    if (backdrop?.style == null) return;\n\n    if (messageQueue.length <= 1) backdrop.style.display = \"none\";\n    else ShowMessage(messageQueue[0].title, messageQueue[0].message);\n    setMessageQueue(old => old.splice(0, 1));\n  }\n\n  // const getFormat = () => {\n  //   let formatsDiv = formatsRef.current;\n\n  //   if (formatsDiv?.children == null) return;\n\n  //   let formatInputs = formatsDiv.getElementsByClassName(\"formatInput\");\n\n  //   for (let i = 0; i < formatInputs.length; i++) {\n  //     // @ts-ignore\n  //     if (formatInputs.item(i).checked) {\n  //       // @ts-ignore\n  //       return { format: formatInputs.item(i)?.id, type: formatInputs.item(i).value };\n  //     }\n  //   }\n\n  //   return { type: \"none\" };\n  // }\n\n  const search = async () => {\n    let sinput = searchInputRef.current;\n    let sbutton = searchButton.current;\n    let searchDiv = searchDivRef.current;\n    let loadingDiv = loadingDivRef.current;\n    let infoDiv = infoDivRef.current;\n\n    if (sinput?.value == null) return;\n    if (sbutton?.disabled == null) return;\n    if (sinput.value == \"\") return;\n    if (searchDiv?.style == null) return;\n    if (loadingDiv?.style == null) return;\n    if (infoDiv?.style == null) return;\n\n    sbutton.disabled = true;\n    searchDiv.style.display = \"none\";\n    loadingDiv.style.display = \"flex\";\n\n    let data = await fetch(`/api/videoInfo?url=${sinput.value}`);\n\n    switch (data.status) {\n      case 422:\n        queueMessage('Invalid format, please enter a youtube video link', '');\n        loadingDiv.style.display = \"none\";\n        searchDiv.style.display = \"flex\";\n        sbutton.disabled = false;\n        break;\n      case 404:\n        queueMessage('Video not found', '');\n        loadingDiv.style.display = \"none\";\n        searchDiv.style.display = \"flex\";\n        sbutton.disabled = false;\n        break;\n      case 500:\n        queueMessage('Code: 500', 'Internal server error');\n        loadingDiv.style.display = \"none\";\n        searchDiv.style.display = \"flex\";\n        sbutton.disabled = false;\n        break;\n      case 200:\n        setCurrentInfo(await data.json());\n        loadingDiv.style.display = \"none\";\n        infoDiv.style.display = \"flex\";\n        break;\n    }\n  }\n\n  const download = async () => {\n    let dbutton = searchButton.current;\n    let backdrop = backdropRef.current;\n    let msgBox = messageBoxRef.current;\n    let videoDropdown = videoQualityDropdownRef.current;\n\n    if (dbutton?.disabled == null) return;\n    if (backdrop?.style == null) return;\n    if (msgBox?.style == null) return;\n    msgBox.style.display = \"none\";\n    backdrop.style.display = \"flex\";\n    dbutton.disabled = true;\n\n    if ([\"mp4\", \"flv\", \"avi\", \"webm\"].includes(formatSelected) && videoDropdown?.value != null) {\n      const newwindow = window.open(`http://localhost/api/downloadVideo?url=${currentInfo?.videoDetails.video_url}&format=${formatSelected}&quality=${videoDropdown.value}`);\n\n      if (newwindow == null) return;\n      newwindow.onbeforeunload = () => {\n        if (backdrop?.style != null) backdrop.style.display = \"none\";\n        if (dbutton?.disabled != null) dbutton.disabled = false;\n      }\n    } else {\n      let newwindow = window.open(`http://localhost/api/downloadAudio?url=${currentInfo?.videoDetails.video_url}&format=${formatSelected}`);\n\n      if (newwindow == undefined) return;\n      newwindow.onbeforeunload = () => {\n        if (backdrop?.style != null) backdrop.style.display = \"none\";\n        if (dbutton?.disabled != null) dbutton.disabled = false;\n      }\n    }\n  }\n\n  const setFormat = (e: React.MouseEvent<HTMLInputElement, MouseEvent>) => {\n    // @ts-ignore\n    setFormatedSelected(e.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <div ref={searchDivRef} className=\"contentDiv\">\n        <h1>Enter a youtube link to download!</h1>\n        <input type=\"text\" ref={searchInputRef} />\n        <button ref={searchButton} onClick={() => search()}>Search</button>\n      </div>\n      <div ref={loadingDivRef} className=\"contentDiv showNoneFirst\">\n        <Spinner color=\"white\" className=\"spinner\" name=\"line-scale-pulse-out-rapid\" fadeIn=\"none\" />\n      </div>\n      <div ref={infoDivRef} className=\"contentDiv showNoneFirst videoInfoDiv\">\n        <a href={currentInfo?.videoDetails.video_url} target=\"_blank\" >\n          <div className=\"videoInfo\">\n            <img src={currentInfo?.videoDetails.thumbnails[0].url} alt=\"\" />\n            <p>{currentInfo?.videoDetails.title}</p>\n          </div>\n        </a>\n        <div ref={formatsRef} className=\"formats\">\n          <input onClick={setFormat} type=\"radio\" name=\"format\" value=\"mp4\" id=\"mp4\" className=\"formatInput\" />\n          <label htmlFor=\"mp4\">mp4</label>\n          <input onClick={setFormat} type=\"radio\" name=\"format\" value=\"avi\" id=\"avi\" className=\"formatInput\" />\n          <label htmlFor=\"avi\">avi</label>\n          <input onClick={setFormat} type=\"radio\" name=\"format\" value=\"flv\" id=\"flv\" className=\"formatInput\" />\n          <label htmlFor=\"flv\">flv</label>\n          <input onClick={setFormat} type=\"radio\" name=\"format\" value=\"webm\" id=\"webm\" className=\"formatInput\" />\n          <label htmlFor=\"webm\">webm</label>\n          <input onClick={setFormat} type=\"radio\" name=\"format\" value=\"3gp\" id=\"3gp\" className=\"formatInput\" />\n          <label htmlFor=\"3gp\">3gp</label>\n          <input onClick={setFormat} type=\"radio\" defaultChecked name=\"format\" value=\"mp3\" id=\"mp3\" className=\"formatInput\" />\n          <label htmlFor=\"mp3\">mp3</label>\n          <input onClick={setFormat} type=\"radio\" name=\"format\" value=\"ogg\" id=\"ogg\" className=\"formatInput\" />\n          <label htmlFor=\"ogg\">ogg</label>\n          <input onClick={setFormat} type=\"radio\" name=\"format\" value=\"wav\" id=\"wav\" className=\"formatInput\" />\n          <label htmlFor=\"wav\">wav</label>\n        </div>\n        {[\"mp4\", \"flv\", \"webm\", \"avi\", '3gp'].includes(formatSelected) ? <select name=\"quality\" id=\"quality\" ref={videoQualityDropdownRef}>\n          {currentInfo?.formats.filter(x => x.container === \"mp4\").map(x => x.qualityLabel).filter(x => x != undefined && x != \"\").map((x, i) => (\n            <option key={i} value={x}>{x}</option>\n          ))}\n        </select> : ''}\n        <button onClick={() => download()}>Download</button>\n      </div>\n      {/* <div className=\"downloadInfo\">\n        <input type=\"text\" />\n        <select name=\"quality\" id=\"quality\">\n          <option value=\"144p\">144p</option>\n          <option value=\"144p 15fps\">144p 15fps</option>\n          <option value=\"360p\">360p</option>\n          <option value=\"480p\">480p</option>\n          <option value=\"720p\">720p</option>\n          <option value=\"720p60\">720p60</option>\n          <option value=\"1080p\">1080p</option>\n          <option value=\"1080p60\">1080p60</option>\n        </select>\n        <select name=\"format\" id=\"format\">\n          <option value=\"flv\">flv</option>\n          <option value=\"3gp\">3gp</option>\n          <option value=\"mp4\">mp4</option>\n          <option value=\"webm\">webm</option>\n          <option value=\"ts\">ts</option>\n        </select>\n      </div> */}\n      <div ref={backdropRef} className=\"backdrop\">\n        <div ref={messageBoxRef} className=\"message\">\n          <h1>{messageTitle}</h1>\n          <h3>{messageContent}</h3>\n          <button onClick={() => closeMessage()}>Close</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}